public class Solution {
    public int solution(int n, int a, int b) {
        int answer = 0;

        while(true){
            a = a / 2 + a % 2;
            b = b / 2 + b % 2;
            answer += 1;
            if(a==b)
                break;
        }

        return answer;
    }
}

/*
1. 이해
- 대회는 N명이 참가하고, 토너먼트 형식으로 진행된다.
  N명의 참가자는 각각 1부터 N번을 차례대로 배정받는다.
  그리고, 1번 <-> 2번, 3번 <-> 4번, ... , N-1번 <-> N번의 참가자끼리 게임을 진행한다.
  각 게임에서 이긴 사람은 다음 라운드에 진출할 수 있다.
  이때, 다음 라운드에 진출할 참가자의 번호는 다시 1번부터 N/2번을 차례대로 배정받는다.
  게임은 최종 한 명이 남을 때까지 진행된다.
- 이때 처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 궁금해졌다.
  게임 참가자 수 N, 참가자 번호 A, 경쟁자 번호 B가 함수 solution의 매개변수로 주어질 때,
  처음 라운드에서 A번을 가진 참가자는 경쟁자로 생각하는 B번 참가자와 몇 번째 라운드에서 만나는지 return 하는 solution 함수를 완성하라.
  단, A번 참가자와 B번 참가자는 서로 붙게 되기 전까지 항상 이긴다고 가정한다.
2. 계획
-> 12 34 56 78 이런식으로 되어 있는데 여기서 +1을 하고 나누기 2를 시도하면 같은 그룹으로 묶이면서 나눠지고 최종적으로 원하는 2가지값이 일치할 때 카운팅 수를 도출할 수 있다.

3. 실행
 */
